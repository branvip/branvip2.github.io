{"version":3,"sources":["utils/publicRoute.jsx","components/header/logo.jsx","components/header/header.jsx","components/footer/footer.jsx","components/layout/layout.js","components/exception/page404.jsx","utils/common.js","components/content/search/treemap.jsx","components/content/loading.jsx","components/content/search/graph/graph.jsx","components/content/search/detail/detail.jsx","components/content/search/table/table.jsx","components/content/search/logoBoard.jsx","components/exception/noData.jsx","components/content/layout.jsx","components/content/searchBar.jsx","components/content/content.jsx","App.js","reportWebVitals.js","redux/modules/logoboard.js","redux/index.js","index.js"],"names":["PublicRoute","Component","component","rest","store","useStore","getState","logoState","businessKey","feelKey","dataObject","render","props","Logo","className","id","alt","src","Header","Layout","menus","key","url_link","title","HeaderLayout","span","style","textAlign","theme","mode","map","Item","to","Footer","FooterLayout","Content","LayoutCus","padding","children","Page404","status","subTitle","extra","type","local","process","REACT_APP_API_HOST","reqTreemap","reqGraph","reqTags","reqLogo","DISTING","TreeMap","keyword_data","onClick","e","target","parentElement","ariaLabel","search_key","fetch","then","res","json","response","message","alert","data","catch","err","console","log","dataSource","weightValuePath","equalColorValuePath","leafItemSettings","labelPath","labelPosition","labelFormat","labelStyle","color","size","colorMapping","value","Loading","graphkeys","label","ItemView","item","percent","graphStyle","minWidth","width","background","height","marginLeft","marginBottom","keyword","innerText","datas","propFunc","Graph","useState","loading","setLoading","graph_data","setGraphData","useEffect","getGraphData","all","sg_all","res_data","registration","sg_registration","parseFloat","toFixed","refusal","sg_refusal","application","sg_application","announcement","sg_announcement","etc","sg_etc","idx","takeData","menu_list","DescriptionItem","content","href","LogoDetail","detail_data","data_list","setDataList","cookies","Cookies","menu","cursor","hover","detailData","a","p","undefined","set","Set","get","JSON","stringify","path","LogoTable","detail_visible","setDetailVisible","setDetailData","setDataSource","data_object","useSelector","state","setDataForm","num","date","number","uid_code","logo_appNumber","logo_appDate","logo_pubNum","logo_pubData","logo_regNum","logo_regData","logo_interRegNum","logo_interRegData","logo_lastRightHolderName","logo_regState","logo_refusal","li_path","li_identificaNum","setHover","toggerHover","onMouseEnter","onMouseLeave","TableCus","align","wrap","border","placement","onClose","visible","SelectedLogo","logoDetail","hoverStyle","filter","window","confirm","selectedLogo","parse","SelectedLogoList","selectedLogos","setSelectedLogos","checkCookies","setInterval","clearInterval","marginTop","fontSize","length","display","LogoBoard","overflow","NoData","TabPane","Tabs","feelkeys","MainBoard","setContent","persent","treemap_data","setTreemapData","checkView","contentView","getTreemapData","tm_all","simple","tm_simple","fancy","tm_fancy","modern","tm_modern","traditional","tm_traditional","free","tm_free","calm","tm_calm","abstract","tm_abstract","nature","tm_nature","classic","tm_classic","friendly","tm_friendly","tm_etc","home","tabPosition","onTabClick","activeKey","centered","object","tab","Search","Input","SearchBar","placeholder","onSearch","replace","business","allowClear","ContentLayout","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LOGOSTATE","FEELKEY","BUSINESSKEY","DATAOBJECT","rootReducer","combineReducers","action","logo_state","feel_key","business_key","createStore","composeWithDevTools","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6755fb44.chunk.js","sourcesContent":["import { Route } from \"react-router-dom\";\nimport { useStore } from \"react-redux\";\n\nfunction PublicRoute({ component: Component, ...rest }) {\n  const store = useStore();\n  store.getState().logoState = \"\";\n  store.getState().businessKey = ''\n  store.getState().feelKey = null;\n  store.getState().dataObject = [];\n  return <Route {...rest} render={(props) => <Component {...props} />} />;\n}\n\nexport default PublicRoute;\n","const Logo = () => {\n  return (\n    <div className=\"logo\">\n      <img id=\"logo\" alt=\"logo\" src={\"img/branvip.png\"} />\n    </div>\n  );\n};\n\nexport default Logo;\n","// import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Layout, Menu, Row, Col } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./style.css\";\n\nimport Logo from \"./logo\";\n\nconst { Header } = Layout;\n\nconst menus = [\n  {\n    key: \"search\",\n    url_link: \"/search\",\n    title: \"로고 검색\",\n  },\n  {\n    key: \"introduction\",\n    url_link: \"/introduction\",\n    title: \"서비스 소개\",\n  },\n  {\n    key: \"blog\",\n    url_link: \"/blog\",\n    title: \"블로그\",\n  },\n  {\n    key: \"ask\",\n    url_link: \"/ask\",\n    title: \"문의\",\n  },\n];\n\nconst HeaderLayout = () => {\n  return (\n    <Header>\n      <Row>\n        <Col span={1}></Col>\n        <Col span={7} style={{ textAlign: \"center\" }}>\n          <Logo />\n        </Col>\n        <Col span={8}></Col>\n        <Col span={7}>\n          <Menu theme=\"light\" mode=\"horizontal\">\n            {menus.map(({ key, url_link, title }) => {\n              return (\n                <Menu.Item key={key}>\n                  <Link to={url_link}>{title}</Link>\n                </Menu.Item>\n              );\n            })}\n          </Menu>\n        </Col>\n      </Row>\n    </Header>\n  );\n};\nexport default HeaderLayout;\n","import { Layout } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nconst { Footer } = Layout;\n\nconst FooterLayout = () => {\n  return (\n    <Footer style={{ textAlign: \"center\" }}>\n      Copyright © branvip. All rights reserved.\n    </Footer>\n  );\n};\nexport default FooterLayout;\n","import HeaderLayout from \"../header/header\";\nimport FooterLayout from \"../footer/footer\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nconst LayoutCus = (props) => {\n  return (\n    <Layout className=\"layout\">\n      <div className=\"header\">\n        <HeaderLayout />\n      </div>\n      <div className=\"content\">\n        <Content style={{ padding: \"0 50px\" }}>\n          <div className=\"site-layout-content\">{props.children}</div>\n        </Content>\n      </div>\n      <div className=\"footer\">\n        <FooterLayout />\n      </div>\n    </Layout>\n  );\n};\n\nexport default LayoutCus;\n","import { Result, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport LayoutCus from \"../layout/layout\";\n\nconst Page404 = () => {\n  return (\n    <LayoutCus>\n      <Result\n        status=\"404\"\n        title=\"죄송합니다. 요청하신 페이지를 찾을 수 없습니다.\"\n        subTitle=\"홈 화면으로 이동해주시기 바랍니다.\"\n        extra={\n          <Button type=\"primary\">\n            <Link to={\"/\"}>홈으로</Link>\n          </Button>\n        }\n      />\n    </LayoutCus>\n  );\n};\n\nexport default Page404;\n","// const local = \"http://118.67.132.15:8000\";\nconst local = process.env.REACT_APP_API_HOST;\nexport const reqTreemap = local + \"/api/agent/treemap\";\nexport const reqGraph = local + \"/api/agent/graph\";\nexport const reqTags = local + \"/api/agent/tags\";\nexport const reqLogo = local + \"/api/agent/logo\";\nexport const DISTING = \"&*&\";\nexport const SPACE = '@';","// 라이브러리 labelFormat 속성을 사용하기 위한 주석처리\n/* eslint-disable no-template-curly-in-string */\nimport { TreeMapComponent } from \"@syncfusion/ej2-react-treemap\";\nimport { useStore } from \"react-redux\";\nimport { DISTING, reqTags } from \"../../../utils/common\";\n\nconst TreeMap = ({ keyword_data }) => {\n  const store = useStore();\n\n  const onClick = (e) => {\n    const key = e.target.parentElement.ariaLabel;\n    let search_key = key + DISTING + store.getState().logoState;\n    fetch(`${reqTags}/${search_key}`)\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.message) {\n          alert(response.message);\n        } else {\n          store.getState().dataObject = response.data;\n          store.getState().feelKey = key;\n          // console.log(response.data)\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <TreeMapComponent\n      id=\"treemap\"\n      onClick={onClick}\n      dataSource={keyword_data}\n      weightValuePath=\"persent\"\n      equalColorValuePath=\"keyword\"\n      leafItemSettings={{\n        labelPath: \"keyword\",\n        labelPosition: \"Center\",\n        labelFormat: \"${keyword}<br>${persent}%\",\n        labelStyle: {\n          color: \"black\",\n          size: \"1.5em\",\n        },\n        colorMapping: [\n          {\n            value: \"단순\",\n            color: \"green\",\n          },\n          {\n            value: \"화려\",\n            color: \"pink\",\n          },\n          {\n            value: \"모던\",\n            color: \"gray\",\n          },\n          {\n            value: \"전통\",\n            color: \"blue\",\n          },\n          {\n            value: \"자유\",\n            color: \"purple\",\n          },\n          {\n            value: \"차분\",\n            color: \"orange\",\n          },\n          {\n            value: \"추상\",\n            color: \"red\",\n          },\n          {\n            value: \"자연\",\n            color: \"lightgreen\",\n          },\n          {\n            value: \"클래식\",\n            color: \"brown\",\n          },\n          {\n            value: \"친근\",\n            color: \"skyblue\",\n          },\n          {\n            value: \"기타\",\n            color: \"yellow\",\n          },\n        ],\n      }}\n    ></TreeMapComponent>\n  );\n};\n\nexport default TreeMap;\n","import { Spin } from \"antd\";\nimport \"./style.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <Spin />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport { useStore } from \"react-redux\";\nimport { Row, Col, Button, Tooltip } from \"antd\";\n\nimport \"./style.css\";\nimport Loading from \"../../loading\";\nimport { DISTING, reqGraph, reqTags } from \"../../../../utils/common\";\n\nconst graphkeys = [\n  {\n    id: \"registration\",\n    label: \"등록\",\n  },\n  {\n    id: \"refusal\",\n    label: \"거절\",\n  },\n  {\n    id: \"application\",\n    label: \"출원\",\n  },\n  {\n    id: \"announcement\",\n    label: \"공고\",\n  },\n  {\n    id: \"etc\",\n    label: \"기타\",\n  },\n];\n\nconst ItemView = (props) => {\n  const store = useStore();\n  const { label, percent, color } = props.item;\n\n  // 변동형 그래프의 속성이기 때문에 이곳에서 관리\n  const graphStyle = {\n    minWidth: \"20%\",\n    width: `${percent}%`,\n    background: color,\n    height: \"2.4em\",\n    marginLeft: \"0.3em\",\n    marginBottom: \"1em\",\n  };\n\n  const takeData = (datas) => {\n    props.propFunc(datas);\n  };\n\n  const onClick = (e) => {\n    const keyword = e.target.innerText;\n    let search_key = store.getState().feelKey + store.getState().businessKey + DISTING + keyword;\n    fetch(`${reqTags}/${search_key}`)\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.message) {\n          alert(response.message);\n        } else {\n          store.getState().dataObject = response.data;\n          store.getState().logoState = keyword;\n          takeData(response.data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Row>\n      <Col span={8} style={{ textAlign: \"right\" }}>\n        <Tooltip title={`${label} 항목을 검색`}>\n          <Button id={label} className=\"label\" size=\"large\" onClick={onClick}>\n            {label}\n          </Button>\n        </Tooltip>\n      </Col>\n      <Col span={16}>\n        <div className=\"item\">\n          <div className=\"max\" style={graphStyle}>\n            {percent}\n          </div>\n          <div className=\"min\" style={graphStyle}>\n            {percent}\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nconst Graph = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [graph_data, setGraphData] = useState([\n    {\n      label: \"등록\",\n      percent: 0,\n      color: \"#ff4d4d\",\n    },\n    {\n      label: \"거절\",\n      percent: 0,\n      color: \"#4d4dff\",\n    },\n    {\n      label: \"출원\",\n      percent: 0,\n      color: \"#66cc99\",\n    },\n    {\n      label: \"공고\",\n      percent: 0,\n      color: \"#d966ff\",\n    },\n    {\n      label: \"기타\",\n      percent: 0,\n      color: \"#ffa64d\",\n    },\n  ]);\n\n  useEffect(() => {\n    fetch(reqGraph)\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.message) {\n          alert(response.message)\n        } else {\n          setGraphData(getGraphData(response));\n          setLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [graph_data]);\n\n  const getGraphData = (data) => {\n    let all = data.sg_all;\n    let Leng = 1;\n    let res_data = {\n      registration:\n        data.sg_registration === 0\n          ? \"0\"\n          : parseFloat((data.sg_registration / all) * 100).toFixed(Leng),\n      refusal:\n        data.sg_refusal === 0\n          ? \"0\"\n          : parseFloat((data.sg_refusal / all) * 100).toFixed(Leng),\n      application:\n        data.sg_application === 0\n          ? \"0\"\n          : parseFloat((data.sg_application / all) * 100).toFixed(Leng),\n      announcement:\n        data.sg_announcement === 0\n          ? \"0\"\n          : parseFloat((data.sg_announcement / all) * 100).toFixed(Leng),\n      etc:\n        data.sg_etc === 0\n          ? \"0\"\n          : parseFloat((data.sg_etc / all) * 100).toFixed(Leng),\n    };\n\n    graph_data.map(\n      (keyword, idx) => (keyword.percent = res_data[graphkeys[idx].id])\n    );\n    return graph_data;\n  };\n\n  const takeData = (datas) => {\n    props.propFunc(datas);\n  };\n\n  if (loading) return <Loading />;\n\n  return (\n    <div className=\"graph\">\n      {graph_data.map((item) => {\n        return <ItemView propFunc={takeData} key={item.label} item={item} />;\n      })}\n    </div>\n  );\n};\n\nexport default Graph;\n// export default React.memo(Graph);\n","import { Image, Row, Col } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useEffect, useState } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Loading from \"../../loading\";\n\nconst menu_list = [\n  {\n    title: \"출원번호 / 일자\",\n  },\n  {\n    title: \"출원공고번호 / 일자\",\n  },\n  {\n    title: \"등록번호 / 일자\",\n  },\n  {\n    title: \"국제등록번호 / 일자\",\n  },\n  {\n    title: \"출원인 명칭 (코드) / 국적\",\n  },\n  {\n    title: \"최종권리자 명칭\",\n  },\n  {\n    title: \"법적상태\",\n  },\n  {\n    title: \"거절이유\",\n  },\n];\n\nconst DescriptionItem = ({ title, content, type }) => {\n  if (type === 7 && content !== \"\") {\n    content = <a href={content}>파일</a>;\n  }\n  return (\n    <Row>\n      <Col span={12}>{title}:</Col>\n      <Col span={12}>{content}</Col>\n    </Row>\n  );\n};\n\nconst LogoDetail = ({ detail_data }) => {\n  const [loading, setLoading] = useState(true);\n  const [data_list, setDataList] = useState([]);\n  const cookies = new Cookies();\n\n  useEffect(() => {\n    setDataList(detail_data);\n    setLoading(false);\n  }, [detail_data]);\n\n  if (loading) return <Loading />;\n\n  return (\n    <div>\n      <Row>\n        {/* 로고 비율 */}\n        <Col span={24}>\n          <div>\n            <Image src={data_list[8]} />\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        {/* 내용 비율 */}\n        <Col span={24}>\n          <p\n            className=\"site-description-item-profile-p\"\n            style={{ marginBottom: 24 }}\n          >\n            서지정보\n          </p>\n          {/* <p className=\"site-description-item-profile-p\">{detail_data[1]}</p> */}\n          <Row>\n            {menu_list.map((menu, idx) => {\n              return (\n                <Col key={idx} span={24}>\n                  <DescriptionItem\n                    title={menu.title}\n                    content={data_list[idx]}\n                    type={idx}\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n          {!loading && (\n            <Row>\n              <Col\n                style={{ color: \"blue\", cursor: \"pointer\", hover: \"blue\" }}\n                onClick={() => {\n                  const detailData = {\n                    // app number by app date\n                    a: detail_data[0],\n\n                    // image path\n                    p: detail_data[8],\n                  };\n\n                  if (detailData.a !== undefined) {\n                    cookies.set(\n                      \"selectedLogos\",\n                      [\n                        ...new Set([\n                          ...cookies.get(\"selectedLogos\"),\n                          JSON.stringify(detailData),\n                        ]),\n                      ],\n                      {\n                        path: \"/\",\n                      }\n                    );\n                  }\n                  // console.log(cookies.get(\"selectedLogos\"));\n                }}\n              >\n                장바구니에 담기\n              </Col>\n            </Row>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default LogoDetail;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Drawer, Space } from \"antd\";\n\nimport LogoDetail from \"../detail/detail\";\nimport { reqLogo } from \"../../../../utils/common\";\nimport Loading from \"../../loading\";\n\nconst LogoTable = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [detail_visible, setDetailVisible] = useState(false);\n  const [detail_data, setDetailData] = useState([]);\n  const [dataSource, setDataSource] = useState(props.dataSource);\n  const data_object = useSelector((state) => state.dataObject);\n\n  useEffect(() => {\n    setDataSource(data_object);\n    setLoading(false);\n  }, [dataSource, data_object]);\n\n  const setDataForm = (num, date) => {\n    if (date === \"\" || date === undefined) return num;\n    return `${num} / ${date}`;\n  };\n\n  const callLogo = (number) => {\n    // api 작성\n    fetch(`${reqLogo}/${number}`)\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.message) {\n          alert(response.message);\n        } else {\n          setDetailData([\n            setDataForm(response.logo_appNumber, response.logo_appDate),\n            setDataForm(response.logo_pubNum, response.logo_pubData),\n            setDataForm(response.logo_regNum, response.logo_regData),\n            setDataForm(response.logo_interRegNum, response.logo_interRegData),\n            \"\",\n            `${response.logo_lastRightHolderName}`,\n            `${response.logo_regState}`,\n            `${response.logo_refusal}`,\n            `${response.li_path}`,\n          ]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const onClick = (e) => {\n    const uid_code = e.target.alt;\n    callLogo(uid_code);\n    setDetailVisible(true);\n  };\n\n  const onClose = () => {\n    setDetailVisible(false);\n  };\n\n  const Logo = ({ data }) => {\n    const { li_identificaNum, li_path } = data;\n    const [hover, setHover] = useState(false);\n\n    const toggerHover = () => {\n      setHover(!hover);\n    };\n\n    // const hoverStyle = {\n    //   background: hover ? \"rgba(0, 0, 0, 0.5)\" : \"transparent\",\n    //   filter: hover ? \"brightness(0.5)\" : \"none\",\n    // };\n\n    return (\n      <img\n        style={{\n          // ...hoverStyle,\n          cursor: \"pointer\",\n        }}\n        onMouseEnter={toggerHover}\n        onMouseLeave={toggerHover}\n        src={li_path}\n        alt={li_identificaNum}\n        onClick={onClick}\n        width=\"80em\"\n      />\n    );\n  };\n\n  const TableCus = ({ dataSource }) => {\n    return (\n      <Space size={12} align=\"center\" wrap>\n        {dataSource.map((data, idx) => (\n          <div\n            key={idx}\n            className=\"img-border\"\n            style={{ border: \"1.5px solid gray\" }}\n          >\n            <Logo data={data} />\n          </div>\n        ))}\n      </Space>\n    );\n  };\n\n  if (loading) return <Loading />;\n\n  return (\n    <div>\n      {/* 로고 테이블 */}\n      <TableCus dataSource={dataSource} />\n      {/* 디테일 페이지 */}\n      <Drawer\n        width={480}\n        placement=\"right\"\n        onClose={onClose}\n        visible={detail_visible}\n      >\n        <LogoDetail detail_data={detail_data} />\n      </Drawer>\n    </div>\n  );\n};\n\nexport default LogoTable;\n// export default React.memo(LogoTable);\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Space } from \"antd\";\nimport Cookies from \"universal-cookie\";\n\nimport Graph from \"./graph/graph\";\nimport LogoTable from \"./table/table\";\nimport \"./style.css\";\n\nconst SelectedLogo = ({ logoDetail, cookies }) => {\n  const [hover, setHover] = useState(false);\n\n  const toggerHover = () => {\n    setHover(!hover);\n  };\n\n  const hoverStyle = {\n    background: hover ? \"rgba(0, 0, 0, 0.5)\" : \"transparent\",\n    filter: hover ? \"brightness(0.5)\" : \"none\",\n  };\n\n  return (\n    <div\n      className=\"img-border\"\n      style={{\n        border: \"1.5px solid gray\",\n      }}\n    >\n      <img\n        width=\"80em\"\n        style={{\n          ...hoverStyle,\n          cursor: \"pointer\",\n        }}\n        onMouseEnter={toggerHover}\n        onMouseLeave={toggerHover}\n        src={logoDetail.p}\n        alt={logoDetail.a}\n        onClick={() => {\n          if (window.confirm(\"선택된 로고를 지울까요?\")) {\n            cookies.set(\n              \"selectedLogos\",\n              cookies\n                .get(\"selectedLogos\")\n                .filter(\n                  (selectedLogo) => JSON.parse(selectedLogo).a !== logoDetail.a\n                )\n            );\n            // console.log(cookies.get(\"selectedLogos\"));\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nconst SelectedLogoList = () => {\n  const cookies = new Cookies();\n  const [selectedLogos, setSelectedLogos] = useState([]);\n\n  useEffect(() => {\n    const checkCookies = setInterval(() => {\n      if (cookies.get(\"selectedLogos\") === undefined) {\n        cookies.set(\"selectedLogos\", []);\n      }\n      setSelectedLogos(\n        cookies\n          .get(\"selectedLogos\")\n          .map((selectedLogo) => JSON.parse(selectedLogo))\n      );\n    }, 100);\n    return () => clearInterval(checkCookies);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div style={{ marginTop: \"2rem\" }}>\n      <div style={{ fontSize: \"1.5rem\", marginBottom: \"1rem\" }}>\n        {`선택된 로고 (${selectedLogos.length})`}\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <Space size={12} align=\"center\" wrap>\n          {selectedLogos.map((selectedLogo, idx) => (\n            <SelectedLogo key={idx} logoDetail={selectedLogo} cookies={cookies} />\n          ))}\n        </Space>\n      </div>\n    </div>\n  );\n};\n\nconst LogoBoard = (props) => {\n  const [dataSource, setDataSource] = useState(props.dataSource);\n\n  const takeData = (datas) => {\n    setDataSource(datas);\n  };\n\n  return (\n    <div className=\"content-body\">\n      <Row>\n        <Col span={8} className=\"left\">\n          <Graph propFunc={takeData} />\n        </Col>\n        <Col\n          span={16}\n          className=\"right\"\n          style={{\n            overflow: \"scroll\",\n            border: \"2px solid gray\",\n            padding: \"0.2em\",\n          }}\n        >\n          <LogoTable dataSource={dataSource} />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <SelectedLogoList />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default LogoBoard;\n// export default React.memo(LogoBoard);\n","import { Empty } from \"antd\";\n\nconst NoData = () => {\n  return <Empty />;\n};\n\nexport default NoData;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useStore } from \"react-redux\";\nimport { Row, Col, Tabs } from \"antd\";\n\nimport TreeMap from \"./search/treemap\";\nimport LogoBoard from \"./search/logoBoard\";\nimport NoData from \"../exception/noData\";\nimport Loading from \"../content/loading\";\nimport { DISTING, reqTags, reqTreemap } from \"../../utils/common\";\n\nconst { TabPane } = Tabs;\n\nconst home = (treemap_data) => <TreeMap keyword_data={treemap_data} />;\nconst feelkeys = [\n  {\n    key: \"simple\",\n    title: \"단순\",\n  },\n  {\n    key: \"fancy\",\n    title: \"화려\",\n  },\n  {\n    key: \"modern\",\n    title: \"모던\",\n  },\n  {\n    key: \"traditional\",\n    title: \"전통\",\n  },\n  {\n    key: \"free\",\n    title: \"자유\",\n  },\n  {\n    key: \"calm\",\n    title: \"차분\",\n  },\n  {\n    key: \"abstract\",\n    title: \"추상\",\n  },\n  {\n    key: \"nature\",\n    title: \"자연\",\n  },\n  {\n    key: \"classic\",\n    title: \"클래식\",\n  },\n  {\n    key: \"friendly\",\n    title: \"친근\",\n  },\n  {\n    key: \"etc\",\n    title: \"기타\",\n  },\n];\n\nconst MainBoard = (props) => {\n  const store = useStore();\n  const data_object = useSelector((state) => state.dataObject);\n  const [loading, setLoading] = useState(true);\n  const [dataSource, setDataSource] = useState(props.dataSource);\n  const [content, setContent] = useState(<Loading />);\n  const [treemap_data, setTreemapData] = useState([\n    {\n      keyword: \"단순\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"화려\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"모던\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"전통\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"자유\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"차분\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"추상\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"자연\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"클래식\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"친근\",\n      persent: \"-1\",\n    },\n    {\n      keyword: \"기타\",\n      persent: \"-1\",\n    },\n  ]);\n\n  useEffect(() => {\n    const checkView = setInterval(() => {\n      if (store.getState().dataObject !== []) {\n        contentView()\n      }\n    }, 1000);\n    return () => clearInterval(checkView);\n  })\n\n  useEffect(() => {\n    fetch(reqTreemap)\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.message) {\n          alert(response.message);\n        } else {\n          setTreemapData(getTreemapData(response));\n          setLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setContent(<NoData />);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [treemap_data]);\n\n  useEffect(() => {\n    setDataSource(data_object);\n    contentView();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dataSource, data_object]);\n\n  const getTreemapData = (data) => {\n    let all = data.tm_all;\n    let Leng = 1;\n    let res_data = {\n      simple:\n        data.tm_simple === 0\n          ? \"0\"\n          : parseFloat((data.tm_simple / all) * 100).toFixed(Leng),\n      fancy:\n        data.tm_fancy === 0\n          ? \"0\"\n          : parseFloat((data.tm_fancy / all) * 100).toFixed(Leng),\n      modern:\n        data.tm_modern === 0\n          ? \"0\"\n          : parseFloat((data.tm_modern / all) * 100).toFixed(Leng),\n      traditional:\n        data.tm_traditional === 0\n          ? \"0\"\n          : parseFloat((data.tm_traditional / all) * 100).toFixed(Leng),\n      free:\n        data.tm_free === 0\n          ? \"0\"\n          : parseFloat((data.tm_free / all) * 100).toFixed(Leng),\n      calm:\n        data.tm_calm === 0\n          ? \"0\"\n          : parseFloat((data.tm_calm / all) * 100).toFixed(Leng),\n      abstract:\n        data.tm_abstract === 0\n          ? \"0\"\n          : parseFloat((data.tm_abstract / all) * 100).toFixed(Leng),\n      nature:\n        data.tm_nature === 0\n          ? \"0\"\n          : parseFloat((data.tm_nature / all) * 100).toFixed(Leng),\n      classic:\n        data.tm_classic === 0\n          ? \"0\"\n          : parseFloat((data.tm_classic / all) * 100).toFixed(Leng),\n      friendly:\n        data.tm_friendly === 0\n          ? \"0\"\n          : parseFloat((data.tm_friendly / all) * 100).toFixed(Leng),\n      etc:\n        data.tm_etc === 0\n          ? \"0\"\n          : parseFloat((data.tm_etc / all) * 100).toFixed(Leng),\n    };\n\n    treemap_data.map(\n      (keyword, idx) => (keyword.persent = res_data[feelkeys[idx].key])\n    );\n    return treemap_data;\n  };\n\n  const contentView = () => {\n    if (\n      props.dataSource.length !== 0 ||\n      store.getState().dataObject.length !== 0\n    ) {\n      setContent(<LogoBoard dataSource={dataSource} />);\n    } else {\n      setContent(home(treemap_data));\n    }\n  };\n\n  const onTabClick = (key) => {\n    store.getState().businessKey = \"\";\n    let search_key = key + DISTING + store.getState().logoState;\n    fetch(`${reqTags}/${search_key}`)\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.message) {\n          alert(response.message);\n        } else {\n          store.getState().dataObject = response.data;\n          store.getState().feelKey = key;\n          contentView();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  if (loading) return <Loading />;\n\n  return (\n    <div>\n      <Row>\n        <Col span={7}></Col>\n        <Col span={11}>\n          <Tabs\n            tabPosition=\"top\"\n            onTabClick={onTabClick}\n            activeKey={store.getState().feelKey}\n            centered\n          >\n            {feelkeys.map((object) => {\n              return <TabPane tab={object.title} key={object.title}></TabPane>;\n            })}\n          </Tabs>\n        </Col>\n        <Col span={6}></Col>\n      </Row>\n      <Row>\n        <Col span={3} />\n        <Col span={18}>\n          {/* 컨텐츠 변경되는 곳 */}\n          {content}\n        </Col>\n        <Col span={3} />\n      </Row>\n    </div>\n  );\n};\n\nexport default MainBoard;\n// export default React.memo(MainBoard);\n","import React from \"react\";\nimport { useStore } from \"react-redux\";\nimport { Input, Row, Col } from \"antd\";\nimport { reqTags, DISTING, SPACE } from \"../../utils/common\";\n\nconst { Search } = Input;\n\nconst SearchBar = (props) => {\n  const store = useStore();\n\n  const takeData = (datas) => {\n    props.propFunc(datas);\n  };\n\n  const onSearch = (value) => {\n    store.getState().logoState = \"\";\n    store.getState().businessKey = \"\";\n    store.getState().feelKey = null;\n    if (value !== \"\") {\n      let search_key =\n        value.replace(\" \", SPACE) + DISTING + store.getState().logoState;\n      fetch(`${reqTags}/${search_key}`)\n        .then((res) => res.json())\n        .then((response) => {\n          if (response.message) {\n            alert(response.message);\n          } else {\n            if (response.business) {\n              store.getState().businessKey = response.business;\n            }\n            store.getState().dataObject = response.data;\n            // store.getState().feelKey = '단순'\n            takeData(response.data);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  return (\n    <Row>\n      <Col span={7}></Col>\n      <Col span={11}>\n        <Search\n          placeholder='\"단순 화장품\" 형태의 키워드 검색'\n          onSearch={onSearch}\n          size=\"large\"\n          allowClear\n        />\n      </Col>\n      <Col span={6}></Col>\n    </Row>\n  );\n};\n\nexport default SearchBar;\n// export default React.memo(SearchBar);\n","import React, { useState } from \"react\";\nimport LayoutCus from \"../layout/layout\";\nimport MainBoard from \"./layout\";\nimport SearchBar from \"./searchBar\";\nimport \"./style.css\";\n\nconst ContentLayout = () => {\n  const [dataSource, setDataSource] = useState([]);\n\n  const takeData = (datas) => {\n    setDataSource(datas);\n  };\n  return (\n    <LayoutCus>\n      <div className=\"content\">\n        <div className=\"search-bar\">\n          <SearchBar propFunc={takeData} />\n        </div>\n        <div className=\"feelkey-list\">\n          <MainBoard dataSource={dataSource} />\n        </div>\n      </div>\n    </LayoutCus>\n  );\n};\n\nexport default ContentLayout;\n// export default React.memo(ContentLayout);\n","import React from \"react\";\n// import { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import Cookies from \"universal-cookie\";\n\nimport PublicRoute from \"./utils/publicRoute\";\nimport Page404 from \"./components/exception/page404\";\nimport ContentLayout from \"./components/content/content\";\n// import Introduction from \"./components/content/introduction/introduction\";\n// import Blog from \"./components/content/blog/blog\";\n// import Ask from \"./components/content/ask/ask\";\n\nconst App = () => {\n  // const cookies = new Cookies();\n\n  // useEffect(() => {\n  //   if (cookies.get(\"selectedLogos\") === undefined) {\n  //     cookies.set(\"selectedLogos\", JSON.stringify([]));\n  //   }\n  // }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute exact path={[\"/\", \"/search\"]} component={ContentLayout} />\n        {/* <PublicRoute exact path=\"/introduction\" component={Introduction} />\n        <PublicRoute exact path=\"/blog\" component={Blog} />\n        <PublicRoute exact path=\"/ask\" component={Ask} /> */}\n        <Route component={Page404} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const LOGOSTATE = \"LOGOSTATE\";\nexport const FEELKEY = \"FEELKEY\";\nexport const BUSINESSKEY = \"BUSINESSKEY\";\nexport const DATAOBJECT = \"DATAOBJECT\";\n\nconst logo_state = \"\";\nexport const logoState = (state = logo_state, action) => {\n  switch (action.type) {\n    case LOGOSTATE:\n      state = action.logo_state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nconst feel_key = null;\nexport const feelKey = (state = feel_key, action) => {\n  switch (action.type) {\n    case FEELKEY:\n      state = action.feel_key;\n      return state;\n    default:\n      return state;\n  }\n};\n\nconst business_key = null;\nexport const businessKey = (state = business_key, action) => {\n  switch (action.type) {\n    case BUSINESSKEY:\n      state = action.business_key;\n      return state;\n    default:\n      return state;\n  }\n};\n\nconst data_object = [];\nexport const dataObject = (state = data_object, action) => {\n  switch (action.type) {\n    case DATAOBJECT:\n      state = action.data_object;\n      return state;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport {\n  logoState,\n  feelKey,\n  businessKey,\n  dataObject,\n} from \"./modules/logoboard\";\n\nconst rootReducer = combineReducers({\n  logoState,\n  feelKey,\n  businessKey,\n  dataObject,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}